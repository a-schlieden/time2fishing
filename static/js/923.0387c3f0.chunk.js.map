{"version":3,"file":"static/js/923.0387c3f0.chunk.js","mappings":"kLACA,EAAyB,0B,SCwBzB,EAtBkB,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,gBAAKC,UAAWC,EAAhB,SACKJ,EAAUK,OAAS,IAChB,wBACKL,EAAUM,KAAI,SAAAC,GAAI,OACf,yBACI,SAAC,KAAD,CACIC,GAAE,UAAKT,EAAUA,EAAUQ,EAAKE,IAAMF,EAAKE,KAC3CC,MAAO,CAAEC,KAAMV,GAFnB,SAIKM,EAAKK,QALLL,EAAKM,GADC,OActC,E,+DCtBD,EAA8B,6BC0D9B,EA/CgB,WAEZ,OAAsBC,EAAAA,EAAAA,UAAS,YAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAwBF,EAAAA,EAAAA,UAAS,YAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA+BJ,EAAAA,EAAAA,UAAS,IAAxC,eAAOK,EAAP,KAAoBC,EAApB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,qFACdC,UAAUC,YAAYC,oBAAmB,SAAUC,GAC/CV,EAAOU,EAASC,OAAOC,UACvBV,EAAQQ,EAASC,OAAOE,UAC3B,IAJa,SAMRC,MAAM,GAAD,OAjBX,0CAiBW,yBAAwBf,EAAxB,gBAAmCE,EAAnC,+BAhBX,qCAiBKc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAG,GACFd,EAAQc,GACRC,QAAQC,IAAIF,EACf,IAXS,2CAAH,qDAafZ,GACH,GAAE,CAACP,EAAKE,KAKL,gBAAKd,UAAWC,EAAhB,SAEiC,oBAApBe,EAAYkB,MACjB,iCACI,0BAAI,WAASlB,EAAYP,KAAK,sBAC9B,yBAAG,eAAaO,EAAYkB,KAAKC,KAAK,aACtC,yBAAG,YAAU,IAAIC,KAA+B,IAA1BpB,EAAYqB,IAAIC,SAAgBC,mBAAmB,aACzE,yBAAG,WAAS,IAAIH,KAA8B,IAAzBpB,EAAYqB,IAAIG,QAAeD,mBAAmB,aACvE,yBAAG,gBAAcvB,EAAYyB,QAAQ,GAAGP,SACxC,yBAAG,aAAWlB,EAAYkB,KAAKQ,SAAS,SACxC,yBAAG,QAAMC,MAASC,OAAO,YACzB,yBAAG,SAAOD,MAASC,OAAO,aAG9B,oBAKf,ECxDD,EAA4B,wBCe5B,EAXa,SAAC,GAAmB,IACvBC,EADsB,EAAhBhD,UAGZ,OACI,iBAAKG,UAAWC,EAAhB,WACI,SAAC,EAAD,CAAWL,QAAS,UAAWC,UAAWgD,KAC1C,SAAC,EAAD,MAGX,C","sources":["webpack://time2fishing/./src/components/FischList/FischList.module.css?536d","components/FischList/FischList.jsx","webpack://time2fishing/./src/components/Weather/Weather.module.css?d867","components/Weather/Weather.jsx","webpack://time2fishing/./src/pages/home/home.module.css?cea6","pages/home/home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"flWrap\":\"FischList_flWrap__pTT7g\"};","import { Link, useLocation } from 'react-router-dom';\nimport style from './FischList.module.css';\n\nconst FischList = ({ sublink, tackleArr }) => {\n    const location = useLocation();\n    return (\n        <div className={style.flWrap}>\n            {tackleArr.length > 0 && (\n                <ul>\n                    {tackleArr.map(fish => (\n                        <li key={fish.id}>\n                            <Link\n                                to={`${sublink ? sublink + fish.loc : fish.loc}`}\n                                state={{ from: location }}\n                            >\n                                {fish.name}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default FischList;","// extracted by mini-css-extract-plugin\nexport default {\"weatherWrap\":\"Weather_weatherWrap__vD5yT\"};","\nimport React, { useEffect, useState } from \"react\";\nimport moment from 'moment';\n\nimport style from './Weather.module.css';\n\n\n\nconst URL = 'https://api.openweathermap.org/data/2.5';\nconst KEY = 'd166a591b291530de4f15fa7d5685607';\n\n\nconst Weather = () => {\n\n    const [lat, setLat] = useState(51.3144537);\n    const [long, setLong] = useState(12.2908344);\n    const [weatherData, setData] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            navigator.geolocation.getCurrentPosition(function (position) {\n                setLat(position.coords.latitude);\n                setLong(position.coords.longitude);\n            });\n\n            await fetch(`${URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${KEY}`)\n                .then(res => res.json())\n                .then(result => {\n                    setData(result)\n                    console.log(result);\n                });\n        }\n        fetchData();\n    }, [lat, long])\n\n\n\n    return (\n        <div className={style.weatherWrap}>\n\n            {(typeof weatherData.main != 'undefined') ? (\n                <>\n                    <h3>Leipzig {weatherData.name} weather (beta)</h3>\n                    <p>Temprature: {weatherData.main.temp} &deg;C</p>\n                    <p>Sunrise: {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString('en-IN')}</p>\n                    <p>Sunset: {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString('en-IN')}</p>\n                    <p>Description: {weatherData.weather[0].main}</p>\n                    <p>Humidity: {weatherData.main.humidity} %</p>\n                    <p>Day: {moment().format('dddd')}</p>\n                    <p>Date: {moment().format('LL')}</p>\n                </>\n            ) : (\n                <div></div>\n            )}\n\n        </div>\n    );\n};\n\nexport default Weather;","// extracted by mini-css-extract-plugin\nexport default {\"homeWrapp\":\"home_homeWrapp__r9n7O\"};","\nimport FischList from 'components/FischList/FischList';\nimport Weather from 'components/Weather/Weather';\nimport style from './home.module.css';\n\nconst Home = ({ tackleArr }) => {\n    const tackleArray = tackleArr\n\n    return (\n        <div className={style.homeWrapp}>\n            <FischList sublink={'fishes/'} tackleArr={tackleArray} />\n            <Weather />\n        </div>\n    );\n};\n\nexport default Home;"],"names":["sublink","tackleArr","location","useLocation","className","style","length","map","fish","to","loc","state","from","name","id","useState","lat","setLat","long","setLong","weatherData","setData","useEffect","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","result","console","log","main","temp","Date","sys","sunrise","toLocaleTimeString","sunset","weather","humidity","moment","format","tackleArray"],"sourceRoot":""}