{"version":3,"file":"static/js/99.56cf88cf.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://time2fishing/./src/components/FischTackle/FischTackle.module.css?0ace","components/FischTackle/FischTackle.jsx","webpack://time2fishing/./src/components/CustomTackleForm/CustomTackleForm.module.css?b256","components/CustomTackleForm/CustomTackleForm.jsx","webpack://time2fishing/./src/components/CustomTackleList/CustomTackleList.module.css?7bec","components/CustomTackleList/CustomTackleList.jsx","webpack://time2fishing/./src/components/CustomTackle/CustomTackle.module.css?b8dc","components/CustomTackle/CustomTackle.jsx","webpack://time2fishing/./src/components/BackLink/BackLink.module.css?aa43","components/BackLink/BackLink.jsx","webpack://time2fishing/./src/components/ClearButton/ClearButton.module.css?ad1e","components/ClearButton/ClearButton.jsx","webpack://time2fishing/./src/pages/fischArtDetails/fischArtDetails.module.css?db64","pages/fischArtDetails/fischArtDetails.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"FischTackle_head__OWLgk\",\"fischTAckleList\":\"FischTackle_fischTAckleList__AsawT\"};","\nimport style from './FischTackle.module.css';\n\nconst FichTackle = ({ tacklesArray, head, fnAddToLS, fnRemoveFromLS, isInLS }) => {\n\n    return (\n        <>\n            <h1 className={style.head}>{head}</h1>\n            <ul className={style.fischTAckleList}>\n                {tacklesArray.map(tackle => (\n                    <li key={tackle.id} >\n                        <input type=\"checkbox\"\n                            id={tackle.id}\n                            name=\"vehicle4\"\n                            checked={isInLS.some(value => value === tackle.id)}\n                            onChange={\n                                isInLS.some(value => value === tackle.id)\n                                    //  ? () => RemoveFromLocalStorage(tackle)\n                                    //  : () => AddToLocalStorage(tackle)\n\n                                    ? () => fnRemoveFromLS(tackle)\n                                    : () => fnAddToLS(tackle)\n                            }\n                        />\n                        <span>{tackle.name}</span>\n                    </li>\n\n                ))}\n\n            </ul>\n        </>\n    );\n};\n\nexport default FichTackle;","// extracted by mini-css-extract-plugin\nexport default {\"ctForm\":\"CustomTackleForm_ctForm__Jdyzx\",\"ctFormInput\":\"CustomTackleForm_ctFormInput__TKfQh\",\"ctFormBtn\":\"CustomTackleForm_ctFormBtn__4d7Rk\"};","\nimport { useState } from \"react\";\n\nimport style from './CustomTackleForm.module.css';\n\nconst CustomTackleForm = ({ onSubmitForm }) => {\n\n    const [formInfo, setFormInfo] = useState('');\n\n    const onDataChange = (event) => {\n        setFormInfo(event.target.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmitForm({ formInfo })\n        setFormInfo('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className={style.ctForm}>\n            <input\n                className={style.ctFormInput}\n                type=\"text\"\n                name=\"text\"\n                value={formInfo}\n                placeholder=\"Enter task text...\"\n                onChange={onDataChange}\n            />\n            <button className={style.ctFormBtn} type=\"submit\">Add task</button>\n        </form>\n    );\n};\n\nexport default CustomTackleForm;","// extracted by mini-css-extract-plugin\nexport default {\"ctList\":\"CustomTackleList_ctList__GKZ-h\",\"ctListItemSpan\":\"CustomTackleList_ctListItemSpan__97pxd\",\"ctListItemBtn\":\"CustomTackleList_ctListItemBtn__U30S1\"};","\nimport style from './CustomTackleList.module.css';\n\nconst CustomTackleList = (\n    { customTackles,\n        onDeleteOneCustomTackle,\n        fnAddToLsChecedItem,\n        fnRemoveFromLsChecedItem,\n        fnCheckLsCheckedItem }\n) => {\n    return (\n        <>\n            {customTackles.length > 0 &&\n                (<ul className={style.ctList}>\n                    {customTackles.map(item => (\n                        <li key={item.id}>\n                            <input type=\"checkbox\"\n                                readOnly\n                                id={item.id}\n                                name=\"vehicle4\"\n                                checked={fnCheckLsCheckedItem.some(value => value === item.id)}\n                                onChange={\n                                    fnCheckLsCheckedItem.some(value => value === item.id)\n                                        ? () => fnRemoveFromLsChecedItem(item.id)\n                                        : () => fnAddToLsChecedItem(item.id)\n                                }\n                            />\n                            <span className={style.ctListItemSpan}>{item.text}</span>\n                            <button\n                                onClick={() => onDeleteOneCustomTackle(item.id)}\n                                className={style.ctListItemBtn}>\n                                Delete Task\n                            </button>\n                        </li>\n                    ))}\n                </ul>)\n            }\n        </>\n    );\n};\n\nexport default CustomTackleList;\n","// extracted by mini-css-extract-plugin\nexport default {\"ctHead\":\"CustomTackle_ctHead__uBzsj\"};","\nimport CustomTackleForm from 'components/CustomTackleForm/CustomTackleForm';\nimport CustomTackleList from 'components/CustomTackleList/CustomTackleList';\nimport style from './CustomTackle.module.css';\n\nconst CustomTackle = (\n  { allcustomTackles,\n    newCustomTackleAdd,\n    fnDeleteOneCustomTackle,\n    fnAddToLsChecedItem,\n    fnRemoveFromLsChecedItem,\n    fnCheckLsCheckedItem }\n) => {\n  /* checkBoxState, checkBoxStateChange, */\n  return (\n    <div className={style.ctWrapp}>\n      <h3 className={style.ctHead}>Додаткові снасті</h3>\n      <CustomTackleForm\n        onSubmitForm={newCustomTackleAdd}\n      />\n      <CustomTackleList\n        customTackles={allcustomTackles}\n        onDeleteOneCustomTackle={fnDeleteOneCustomTackle}\n        fnAddToLsChecedItem={fnAddToLsChecedItem}\n        fnRemoveFromLsChecedItem={fnRemoveFromLsChecedItem}\n        fnCheckLsCheckedItem={fnCheckLsCheckedItem}\n      />\n    </div>\n  );\n};\n\nexport default CustomTackle;\n\n\n/* checkBoxState={checkBoxState}\ncheckBoxStateChange={checkBoxStateChange} */","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"BackLink_backLink__JiXo7\"};","import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport style from './BackLink.module.css';\n\nconst BackLink = () => {\n  const location = useLocation().state?.from ?? '/';\n  return (\n    <NavLink className={style.backLink} to={location}>\n      Назад\n    </NavLink>\n  );\n};\n\nexport default BackLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"clearBtn\":\"ClearButton_clearBtn__+DYq-\"};","import style from './ClearButton.module.css';\n\nconst ClearButton = ({ reset }) => {\n  return (\n    <>\n      <button className={style.clearBtn} onClick={reset}>\n        На рибалку\n      </button>\n    </>\n  );\n};\n\nexport default ClearButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapp\":\"fischArtDetails_wrapp__frjKn\"};","\nimport { useState, useEffect } from \"react\";\nimport { Suspense } from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\n\nimport { nanoid } from \"nanoid\";\n\nimport { Loader } from 'components/Loader/Loader';\nimport FischTackle from \"components/FischTackle/FischTackle\";\nimport CustomTackle from \"components/CustomTackle/CustomTackle\";\nimport BackLink from \"components/BackLink/BackLink\";\nimport ClearButton from \"components/ClearButton/ClearButton\";\n\nimport style from './fischArtDetails.module.css';\n\n\nconst FischArtDetails = ({ tackleArr }) => {\n\n    const location = useLocation();\n    const ThisFischTackles = location.pathname;\n    const FischTacklesArr = ThisFischTackles.split(\"/\");\n    const FischTacklesArrItem = FischTacklesArr[2];\n\n    const AllTacklesForFisch = tackleArr.find(option => option.loc === FischTacklesArrItem);\n\n    const LinkTo = location.state;\n\n    //------------------- Tackles -------------------------\n\n    const LOCAL_STORAGE_TACKLE = \"tackles\"\n\n    const [savedTackle, setSavedTackle] = useState(JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_TACKLE)) ?? []);\n\n    useEffect(() => {\n        window.localStorage.setItem(LOCAL_STORAGE_TACKLE, JSON.stringify(savedTackle));\n    }, [savedTackle, LOCAL_STORAGE_TACKLE]);\n\n    const AddToLocalStorage = (item) => {\n        const newTackle = {\n            id: item.id,\n            name: item.name,\n        }\n        setSavedTackle((prevState) => [newTackle, ...prevState]);\n    }\n\n    const RemoveFromLocalStorage = (item) => {\n        setSavedTackle(savedTackle.filter((tak) => tak.id !== item.id));\n    }\n\n    const isInLokalStorage = savedTackle.map(item => item.id);\n\n    //------------------- Check  CustomTackle -------------------------\n\n    const LOCAL_STORAGE_CUSTOM_TACKLE_CHECKED = \"custom_tackles_checkced\";\n\n    const [customTackleCheck, setCustomTackleCheck] = useState(JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_CUSTOM_TACKLE_CHECKED)) ?? []);\n\n    useEffect(() => {\n        window.localStorage.setItem(LOCAL_STORAGE_CUSTOM_TACKLE_CHECKED, JSON.stringify(customTackleCheck));\n    }, [customTackleCheck, LOCAL_STORAGE_CUSTOM_TACKLE_CHECKED]);\n\n    const AddToLsChecedItem = (item) => {\n        const customTackleCheckItem = {\n            id: item,\n        }\n        setCustomTackleCheck((prevState) => [customTackleCheckItem, ...prevState]);\n    }\n\n    const RemoveFromLsChecedItem = (checkeditem) => {\n        setCustomTackleCheck(customTackleCheck.filter((customtack) => customtack.id !== checkeditem));\n    }\n\n    const isCustomTackleCheckInLokalStorage = customTackleCheck.map(item => item.id);\n\n    //------------------- CustomTackle -------------------------\n\n    const LOCAL_STORAGE_CUSTOM_TACKLE = \"custom_tackles\";\n\n    const [customTackle, setCustomTackle] = useState(JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_CUSTOM_TACKLE)) ?? []);\n\n    useEffect(() => {\n        window.localStorage.setItem(LOCAL_STORAGE_CUSTOM_TACKLE, JSON.stringify(customTackle));\n    }, [customTackle, LOCAL_STORAGE_CUSTOM_TACKLE]);\n\n    const addNewCustomTackleToLocalStorage = (infoFromForm) => {\n        const newCustomTackle = {\n            id: nanoid(),\n            text: infoFromForm.formInfo,\n        }\n        setCustomTackle((prevState) => [newCustomTackle, ...prevState]);\n    }\n\n    const deleteOneCustomTackle = (customTackleId) => {\n        setCustomTackle(customTackle.filter((customTackle) => customTackle.id !== customTackleId))\n        setCustomTackleCheck(customTackleCheck.filter((customtack) => customtack.id !== customTackleId));\n    }\n\n    const clearBtn = () => {\n        setSavedTackle([])\n        setCustomTackle([])\n        setCustomTackleCheck([])\n    }\n\n    return (\n        <div style={{\n            backgroundImage: `url(${'../images/' + FischTacklesArrItem + '.jpg'})`\n        }} className={style.wrapp} >\n\n            <BackLink link={LinkTo} />\n            <FischTackle\n                tacklesArray={AllTacklesForFisch.tackle}\n                head={AllTacklesForFisch.name}\n                fnAddToLS={AddToLocalStorage}\n                fnRemoveFromLS={RemoveFromLocalStorage}\n                isInLS={isInLokalStorage}\n            />\n            <CustomTackle\n                newCustomTackleAdd={addNewCustomTackleToLocalStorage}\n                allcustomTackles={customTackle}\n                fnDeleteOneCustomTackle={deleteOneCustomTackle}\n                fnAddToLsChecedItem={AddToLsChecedItem}\n                fnRemoveFromLsChecedItem={RemoveFromLsChecedItem}\n                fnCheckLsCheckedItem={isCustomTackleCheckInLokalStorage}\n            />\n            <ClearButton reset={() => clearBtn()} />\n\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n\n        </div >\n    )\n}\n\nexport default FischArtDetails;\n\n/* checkBoxState={customTackleCheck}\ncheckBoxStateChange={ctCheck} */"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","tacklesArray","head","fnAddToLS","fnRemoveFromLS","isInLS","className","style","map","tackle","type","name","checked","some","value","onChange","onSubmitForm","useState","formInfo","setFormInfo","onSubmit","event","preventDefault","placeholder","target","customTackles","onDeleteOneCustomTackle","fnAddToLsChecedItem","fnRemoveFromLsChecedItem","fnCheckLsCheckedItem","length","item","readOnly","text","onClick","allcustomTackles","newCustomTackleAdd","fnDeleteOneCustomTackle","location","useLocation","state","from","to","reset","tackleArr","FischTacklesArrItem","pathname","split","AllTacklesForFisch","find","option","loc","LinkTo","LOCAL_STORAGE_TACKLE","JSON","parse","window","localStorage","getItem","savedTackle","setSavedTackle","useEffect","setItem","stringify","isInLokalStorage","LOCAL_STORAGE_CUSTOM_TACKLE_CHECKED","customTackleCheck","setCustomTackleCheck","isCustomTackleCheckInLokalStorage","LOCAL_STORAGE_CUSTOM_TACKLE","customTackle","setCustomTackle","backgroundImage","link","FischTackle","newTackle","prevState","filter","tak","infoFromForm","newCustomTackle","customTackleId","customtack","customTackleCheckItem","checkeditem","Suspense","fallback","Loader"],"sourceRoot":""}